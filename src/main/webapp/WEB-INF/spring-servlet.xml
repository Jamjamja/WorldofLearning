<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-4.0.xsd        
    http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- enable automatic scanning for beans (@Controller @Service etc) -->
	<context:component-scan base-package="org.worldoflearning " />


	<mvc:annotation-driven />
	<mvc:resources mapping="/css/**" location="/ressources/css/" />
	<mvc:resources mapping="/img/**" location="/ressources/img/" />
	<mvc:resources mapping="/js/**" location="/ressources/js/" />
	<!-- enable the thymeleaf framework -->
	<bean id="templateResolver"
		class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">
		<property name="prefix" value="/WEB-INF/templates/" />
		<property name="suffix" value=".html" />
		<property name="templateMode" value="HTML5" />
		<!-- Template cache is true by default. Set to false if you want -->
		<!-- templates to be automatically updated when modified. -->
		<property name="cacheable" value="true" />
	</bean>
	<bean id="templateEngine" class="org.thymeleaf.spring4.SpringTemplateEngine">
		<property name="templateResolver" ref="templateResolver" />
	</bean>
	<bean class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
		<property name="templateEngine" ref="templateEngine" />
	</bean>


	<bean id="tilesViewResolver" class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
		<property name="viewClass"
			value="org.thymeleaf.extras.tiles2.spring4.web.view.ThymeleafTilesView" />
		<property name="templateEngine" ref="templateEngine" />
	</bean>

	<!-- Hibernate Bean -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="annotatedClasses">
			<list>
				<value>org.worldoflearning.hibernate.model.Beitrag</value>
				<value>org.worldoflearning.hibernate.model.Benutzer</value>
				<value>org.worldoflearning.hibernate.model.Chatbeitrag</value>
				<value>org.worldoflearning.hibernate.model.Thema</value>
			</list>
		</property>
		<property name="mappingLocations"
			value="classpath:org/worldoflearning/hibernate/model*.hbm.xml" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.current_session_context_class">thread</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>


	</bean>

	<!-- Datenbank Bean -->

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/testdb" />
		<property name="username" value="root" />
		<property name="password" value="" />
	</bean>


	<!-- Benutzer Bean -->
	<bean id="benutzerDAO" class="org.worldoflearning.hibernate.dao.BenutzerDAOImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="benutzerService"
		class="org.worldoflearning.hibernate.service.BenutzerServiceImpl">
		<property name="benutzerDAO" ref="benutzerDAO">
		</property>
	</bean>


	<!-- Chatbeitrag Bean -->
	<bean id="chatbeitragDAO" class="org.worldoflearning.hibernate.dao.ChatbeitragDAOImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="chatbeitragService"
		class="org.worldoflearning.hibernate.service.ChatbeitragServiceImpl">
		<property name="chatbeitragDAO" ref="chatbeitragDAO">
		</property>
	</bean>


	<!-- Beitrag Bean -->
	<bean id="beitragDAO" class="org.worldoflearning.hibernate.dao.BeitragDAOImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="beitragService"
		class="org.worldoflearning.hibernate.service.BeitragServiceImpl">
		<property name="beitragDAO" ref="beitragDAO">
		</property>
	</bean>


	<!-- Thema Bean -->
	<bean id="themaDAO" class="org.worldoflearning.hibernate.dao.ThemaDAOImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="themaService" class="org.worldoflearning.hibernate.service.ThemaServiceImpl">
		<property name="themaDAO" ref="themaDAO">
		</property>
	</bean>


	<!-- Transation -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>


	<!-- Security Config -->

	<security:http auto-config="true" use-expressions="true">
		<security:intercept-url pattern="/" access="permitAll" />
		<security:intercept-url pattern="/impressum"
			access="permitAll" />
		<security:intercept-url pattern="/benutzerinfo"
			access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')" />
		<security:intercept-url pattern="/admin"
			access="hasRole('ROLE_ADMIN')" />
					<security:intercept-url pattern="/chat/**"
			access="hasRole('ROLE_USER')" />
					<security:intercept-url pattern="/forum/**"
			access="hasRole('ROLE_USER')" />

		<security:access-denied-handler
			error-page="/error/403" />

		<security:form-login login-page='/anmelden'
			login-processing-url="/j_spring_security_check" default-target-url="/benutzerinfo"
			always-use-default-target="false" authentication-failure-url="/anmelden?error=true"
			username-parameter="benutzername" password-parameter="password" />

		<security:logout logout-url="/abmelden"
			logout-success-url="/" delete-cookies="JSESSIONID"
			invalidate-session="true" />

	</security:http>
	<security:authentication-manager>
		<security:authentication-provider>
			<security:user-service>
				<security:user name="user1" password="12345"
					authorities="ROLE_USER" />
				<security:user name="admin1" password="12345"
					authorities="ROLE_USER, ROLE_ADMIN" />
			</security:user-service>
		</security:authentication-provider>


		<!-- authentication from database -->
		<security:authentication-provider>
			<security:jdbc-user-service
				data-source-ref="dataSource"
				users-by-username-query="select b.benutzername, b.password, 'true' as enabled from benutzer b where b.benutzername=?"
				authorities-by-username-query="select b.benutzername, b.rolle as authorities from benutzer b where b.benutzername=?" />
		</security:authentication-provider>
	</security:authentication-manager>


</beans>